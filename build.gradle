apply plugin: 'groovy'
apply plugin: 'application'

def groovyVersion = '2.4.5'

version = "0.0.1"
description = "Groovy S3 upload tool"
archivesBaseName = "s3UploadTool"

mainClassName = "S3"

repositories {
    jcenter()
}

compileGroovy {
	groovyOptions.forkOptions.jvmArgs = [
		'-Dgroovy.grape.enable=false'
	]
}

compileTestGroovy {
	groovyOptions.forkOptions.jvmArgs = [
		'-Dgroovy.grape.enable=false'
	]
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.5.0'
    compile 'net.java.dev.jets3t:jets3t:0.9.0'
    compile 'com.xlson.groovycsv:groovycsv:1.3'
    compile 'org.apache.ivy:ivy:2.4.0'
    compile 'org.yaml:snakeyaml:1.21'
    compile 'org.apache.poi:poi:3.17'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

sourceSets {
    main.groovy
    main.java
    test.groovy
    test.java
}

task init(description: 'Initialize project directory structure.') << {
	sourceSets*.allSource.srcDirs.flatten() { File sourceDirectory ->
	   	if (!sourceDirectory.exists()) {
	   		sourceDirectory.mkdirs()
	   	}
	}
}

task uberjar( type: Jar, dependsOn: [':compileJava',':compileGroovy'] ) {
	manifest {
        attributes 'Main-Class': mainClassName
  }
	from files(sourceSets.main.output.classesDir)
  from configurations.runtime.asFileTree.files.collect { zipTree(it) }
}
